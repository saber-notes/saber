name: Build for Play Store

on:
  # Enable manual run
  workflow_dispatch:
  push:
    tags:
      - '**'

env:
  project-id: com.adilhanney.saber

jobs:
  build-aab:
    name: Build AAB for the Play Store
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Remove unneeded files
        run: |
          rm -rf appimage
          rm -rf assets_raw
          rm -rf flatpak
          rm -rf installers
          rm -rf integration_test
          rm -rf ios
          rm -rf linux
          rm -rf macos
          rm -rf metadata
          rm -rf snap
          rm -rf submodules
          rm -rf test
          rm -rf windows

      - name: Remove signingConfig
        run: ./patches/remove_signing_android.sh

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - run: flutter pub get

      - name: Build aab
        run: flutter build appbundle -t lib/main_play_store.dart

      - name: Move unsigned apk
        run: |
          mkdir -p output
          mv build/app/outputs/bundle/release/app-release.aab output/Saber.aab

      - name: Sign aab
        uses: ilharp/sign-android-release@v1
        id: sign_app
        with:
          releaseDir: output
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyAlias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Rename signed apk
        run: mv ${{ steps.sign_app.outputs.signedFile }} output/Saber.aab

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Saber-Android-PlayStore
          path: output/Saber.aab

      - name: Prepare whatsnew directory from metadata/*/changelogs
        run: |
          mkdir -p whatsnew

          # get current version code from lib/data/version.dart
          VERSION_CODE=$(grep -oP '(?<=buildNumber = )\d+' lib/data/version.dart)

          # copy changelogs of each language to whatsnew
          for f in metadata/*; do
            if [ -f "$f/changelogs/$VERSION_CODE.txt" ]; then
              FILE_NAME="whatsnew/whatsnew-$(basename "$f").txt"
              echo "Copying changelog of $(basename "$f") to $FILE_NAME"
              cp "$f/changelogs/$VERSION_CODE.txt" "whatsnew/whatsnew-$(basename "$f").txt"
            fi
          done

      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_JSON }}
          packageName: com.adilhanney.saber
          releaseFiles: output/Saber.aab
          track: beta
          status: completed
          whatsNewDirectory: whatsnew
