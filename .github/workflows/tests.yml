name: Run tests

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  filter-tests:
    name: Choose which tests to run
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      tags: ${{ steps.tags.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Choose test tags
        id: tags
        run: |
          # Outputs a json list of tags to run, out of the following:
          # - mainbranch
          # - i18n
          # - untagged
          tags=()

          if [ "$GITHUB_REPOSITORY" = "saber-notes/saber" ] && [ "$GITHUB_REF_NAME" = "main" ]; then
            echo "On main branch, enabling all tests"
            tags=(mainbranch i18n untagged)
          elif [ "$GITHUB_REPOSITORY" = "saber-notes/saber" ] && [[ "$GITHUB_REF_NAME" =~ ^i18n/ ]]; then
            echo "In i18n PR; enabling i18n tests only"
            tags=(i18n)
          else
            echo "In non-i18n PR; enabling all tests except mainbranch"
            tags=(i18n untagged)
          fi

          # output the tags as a json list
          json=$(printf '%s\n' "${tags[@]}" | jq -R . | jq -c -s .)
          echo "tags=$json"
          echo "tags=$json" >> $GITHUB_OUTPUT

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: filter-tests
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        tag: ${{ fromJson(needs.filter-tests.outputs.tags) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Remove unneeded files
        run: |
          rm -rf assets_raw
          rm -rf submodules

      - name: Install Flutter dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev libsecret-1-dev libjsoncpp-dev ghostscript

      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: |
            build
          key: ${{ runner.OS }}-saber-${{ hashFiles('**/pubspec.lock') }}-${{ hashFiles('**/*.dart') }}
          restore-keys: |
            ${{ runner.OS }}-saber-

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:'

      - run: flutter pub get

      - name: Run tests
        id: tests
        run: |
          if [ "${{ matrix.tag }}" = "untagged" ]; then
            echo "Running untagged tests"
            flutter test \
              --coverage \
              --exclude-tags "mainbranch,i18n"
          else
            echo "Running tagged tests: ${{ matrix.tag }}"
            flutter test \
              --coverage \
              --tags "${{ matrix.tag }}"
          fi

      - name: Upload to Codecov
        if: success()
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/lcov.info

      - name: Ensure test failures directory exists
        if: failure()
        run: mkdir -p test/failures

      - name: Upload test failures
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: Saber-test-failures
          path: test/failures
