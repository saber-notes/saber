name: Build for Android

on:
  # Enable manual run
  workflow_dispatch:
  push:
    tags:
      - '**'

env:
  project-id: com.adilhanney.saber

jobs:
  build-apk:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Remove unneeded files
        run: |
          rm -rf appimage
          rm -rf assets_raw
          rm -rf flatpak
          rm -rf installers
          rm -rf integration_test
          rm -rf ios
          rm -rf linux
          rm -rf macos
          rm -rf metadata
          rm -rf snap
          rm -rf submodules
          rm -rf test
          rm -rf windows

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - run: flutter pub get

      - name: Build apk
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: flutter build apk

      - name: Build apk (dirty)
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: flutter build apk -t lib/main_dirty.dart

      - name: Move unsigned apk
        run: |
          mkdir -p output
          mv build/app/outputs/flutter-apk/app-release.apk output/Saber.apk

      - name: Sign apk
        uses: ilharp/sign-android-release@v1
        id: sign_app
        with:
          releaseDir: output
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyAlias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Rename signed apk
        run: mv ${{ steps.sign_app.outputs.signedFile }} output/Saber.apk

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Saber-Android
          path: output/Saber.apk

      - name: Upload to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: output/Saber.apk

  build-foss-apk:
    name: Build FOSS APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Remove unneeded files
        run: |
          rm -rf appimage
          rm -rf assets_raw
          rm -rf flatpak
          rm -rf installers
          rm -rf integration_test
          rm -rf ios
          rm -rf linux
          rm -rf macos
          rm -rf metadata
          rm -rf packages/onyxsdk_pen
          rm -rf snap
          rm -rf submodules
          rm -rf test
          rm -rf windows

      - name: Remove proprietary dependencies
        run: ./patches/remove_proprietary_dependencies.sh

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - run: flutter pub get

      - name: Build apk
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: flutter build apk

      - name: Build apk (dirty)
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: flutter build apk -t lib/main_dirty.dart

      - name: Move unsigned apk
        run: |
          mkdir -p output
          mv build/app/outputs/flutter-apk/app-release.apk output/Saber-FOSS.apk

      - name: Sign apk
        uses: ilharp/sign-android-release@v1
        id: sign_app
        with:
          releaseDir: output
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyAlias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Rename signed apk
        run: mv ${{ steps.sign_app.outputs.signedFile }} output/Saber-FOSS.apk

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Saber-Android-FOSS
          path: output/Saber-FOSS.apk

      - name: Upload to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: output/Saber-FOSS.apk

  build-foss-alt-apk:
    name: Build FOSS APK with alternate package name
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Remove unneeded files
        run: |
          rm -rf appimage
          rm -rf assets_raw
          rm -rf flatpak
          rm -rf installers
          rm -rf integration_test
          rm -rf ios
          rm -rf linux
          rm -rf macos
          rm -rf metadata
          rm -rf packages/onyxsdk_pen
          rm -rf snap
          rm -rf submodules
          rm -rf test
          rm -rf windows

      - name: Remove proprietary dependencies
        run: ./patches/remove_proprietary_dependencies.sh

      - name: Patch package name
        run: ./patches/alt_package_name.sh

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - run: flutter pub get

      - name: Build apk
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: flutter build apk

      - name: Build apk (dirty)
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: flutter build apk -t lib/main_dirty.dart

      - name: Move unsigned apk
        run: |
          mkdir -p output
          mv build/app/outputs/flutter-apk/app-release.apk output/Saber-alt.apk

      - name: Sign apk
        uses: ilharp/sign-android-release@v1
        id: sign_app
        with:
          releaseDir: output
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyAlias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Rename signed apk
        run: mv ${{ steps.sign_app.outputs.signedFile }} output/Saber-alt.apk

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Saber-Android-FOSS-Alt
          path: output/Saber-alt.apk

      - name: Upload to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: false
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: output/Saber-alt.apk
