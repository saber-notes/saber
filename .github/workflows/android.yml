name: Build for Android

on:
  # Enable manual run
  workflow_dispatch:
  push:
    tags:
      - '**'
    branches:
      - '**'
    paths:
      - .github/workflows/android.yml

jobs:
  build-apk:
    name: Build APK
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup cache
        uses: actions/cache@v4
        with:
          path: |
            build
          key: ${{ runner.OS }}-saber-${{ hashFiles('**/pubspec.lock') }}-${{ hashFiles('**/*.dart') }}
          restore-keys: |
            ${{ runner.OS }}-saber-
      
      - name: Remove simulator dependency
        run: ./patches/remove_simulator_dependency.sh

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17'

      - run: flutter pub get

      - name: Build apk
        run: |
          flutter build apk \
            --dart-define=DIRTY=$DIRTY
        env:
          DIRTY: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Move unsigned apk
        run: |
          mkdir -p output
          mv build/app/outputs/flutter-apk/app-release.apk output/

      - name: Sign apk
        uses: ilharp/sign-android-release@v1
        id: sign_app
        with:
          releaseDir: output
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyAlias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Rename signed apk
        id: rename_apk
        run: |
          buildName=$(grep -oP "(?<=buildName = ').*(?=')" lib/data/version.dart)
          apkName="Saber_v${buildName}.apk"
          mv ${{ steps.sign_app.outputs.signedFile }} output/$apkName
          echo "apkName=$apkName" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Saber-Android
          path: output/${{ steps.rename_apk.outputs.apkName }}

      - name: Upload to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: output/${{ steps.rename_apk.outputs.apkName }}

  build-foss-apk:
    name: Build FOSS APK
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup cache
        uses: actions/cache@v4
        with:
          path: |
            build
          key: ${{ runner.OS }}-saberfoss-${{ hashFiles('**/pubspec.lock') }}-${{ hashFiles('**/*.dart') }}
          restore-keys: |
            ${{ runner.OS }}-saberfoss-

      - name: Remove proprietary dependencies
        run: ./patches/remove_proprietary_dependencies.sh
      
      - name: Remove simulator dependency
        run: ./patches/remove_simulator_dependency.sh

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17'

      - run: flutter pub get

      - name: Build apk
        run: |
          flutter build apk \
            --dart-define=DIRTY=$DIRTY
        env:
          DIRTY: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Move unsigned apk
        run: |
          mkdir -p output
          mv build/app/outputs/flutter-apk/app-release.apk output/

      - name: Sign apk
        uses: ilharp/sign-android-release@v1
        id: sign_app
        with:
          releaseDir: output
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyAlias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Rename signed apk
        id: rename_apk
        run: |
          buildName=$(grep -oP "(?<=buildName = ').*(?=')" lib/data/version.dart)
          apkName="Saber_FOSS_v${buildName}.apk"
          mv ${{ steps.sign_app.outputs.signedFile }} output/$apkName
          echo "apkName=$apkName" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Saber-Android-FOSS
          path: output/${{ steps.rename_apk.outputs.apkName }}

      - name: Upload to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: output/${{ steps.rename_apk.outputs.apkName }}
