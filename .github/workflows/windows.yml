name: Build for Windows

on:
  # Enable manual run
  workflow_dispatch:
  push:
    tags:
      - '**'

env:
  project-id: com.adilhanney.saber

jobs:
  get-version:
    name: Get version
    runs-on: ubuntu-latest
    outputs:
      buildName: ${{ steps.get_version.outputs.buildName }}
      buildNumber: ${{ steps.get_version.outputs.buildNumber }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          # get buildName from lib/data/version.dart
          buildName=$(grep -oP "(?<=buildName = ').*(?=')" lib/data/version.dart)
          echo "buildName=$buildName" >> $GITHUB_OUTPUT

          # get buildNumber from lib/data/version.dart
          buildNumber=$(grep -oP '(?<=buildNumber = ).*(?=;)' lib/data/version.dart)
          echo "buildNumber=$buildNumber" >> $GITHUB_OUTPUT

  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    needs: get-version
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Remove unneeded files
        shell: bash
        run: |
          rm -rf android
          rm -rf appimage
          rm -rf assets_raw
          rm -rf flatpak
          rm -rf integration_test
          rm -rf ios
          rm -rf linux
          rm -rf macos
          rm -rf metadata
          rm -rf snap
          rm -rf submodules
          rm -rf test

      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: |
            build
          key: ${{ runner.OS }}-saber-${{ hashFiles('**/pubspec.lock') }}-${{ hashFiles('**/*.dart') }}
          restore-keys: |
            ${{ runner.OS }}-saber-

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:'

      - run: flutter pub get

      - name: Build Windows
        shell: bash
        run: |
          flutter build windows \
            --dart-define=DIRTY=$DIRTY
        env:
          DIRTY: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Download Visual C++ Redistributable
        shell: bash
        run: |
          curl -L -o installers/vc_redist.x64.exe https://aka.ms/vs/17/release/vc_redist.x64.exe

      - name: Build Windows Installer
        run: ISCC.exe installers/desktop_inno_script.iss

      - name: Rename exe
        id: rename
        shell: bash
        run: |
          installerName="SaberInstaller_v${{ needs.get-version.outputs.buildName }}.exe"
          echo "installerName=$installerName" >> $GITHUB_OUTPUT

          mv installers/SaberInstaller.exe installers/$installerName

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Saber-Windows
          path: installers/${{ steps.rename.outputs.installerName }}

      - name: Upload to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: installers/${{ steps.rename.outputs.installerName }}
